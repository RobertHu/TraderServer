//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.296
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data;
using System.Diagnostics;
using System.Web.Services;
using System.Web.Services.Protocols;
using System.Xml.Serialization;

// 
// This source code was auto-generated by wsdl, Version=4.0.30319.1.
// 


/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
[System.Web.Services.WebServiceBindingAttribute(Name="ParticipantServicesSoap", Namespace="http://tempuri.org/")]
public partial class ParticipantServices : System.Web.Services.Protocols.SoapHttpClientProtocol {
    
    private System.Threading.SendOrPostCallback UpdateParticipantOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdatePasswordOperationCompleted;
    
    private System.Threading.SendOrPostCallback UpdateParticipant1OperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateParticipantOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteParticipantOperationCompleted;
    
    private System.Threading.SendOrPostCallback CreateParticipantRelationOperationCompleted;
    
    private System.Threading.SendOrPostCallback DeleteParticipantRelationOperationCompleted;
    
    private System.Threading.SendOrPostCallback CheckParticipantRelationOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetParticipantsOperationCompleted;
    
    private System.Threading.SendOrPostCallback GetParticipantTypesOperationCompleted;
    
    private System.Threading.SendOrPostCallback LoginByAdministratorOperationCompleted;
    
    private System.Threading.SendOrPostCallback LoginOperationCompleted;
    
    /// <remarks/>
    public ParticipantServices() {
        this.Url = "http://ws0206/iExchangeCollection/iExchange3%20Team/iExchange3/Security/Web/Servi" +
            "ce/participantservices.asmx";
    }
    
    /// <remarks/>
    public event UpdateParticipantCompletedEventHandler UpdateParticipantCompleted;
    
    /// <remarks/>
    public event UpdatePasswordCompletedEventHandler UpdatePasswordCompleted;
    
    /// <remarks/>
    public event UpdateParticipant1CompletedEventHandler UpdateParticipant1Completed;
    
    /// <remarks/>
    public event CreateParticipantCompletedEventHandler CreateParticipantCompleted;
    
    /// <remarks/>
    public event DeleteParticipantCompletedEventHandler DeleteParticipantCompleted;
    
    /// <remarks/>
    public event CreateParticipantRelationCompletedEventHandler CreateParticipantRelationCompleted;
    
    /// <remarks/>
    public event DeleteParticipantRelationCompletedEventHandler DeleteParticipantRelationCompleted;
    
    /// <remarks/>
    public event CheckParticipantRelationCompletedEventHandler CheckParticipantRelationCompleted;
    
    /// <remarks/>
    public event GetParticipantsCompletedEventHandler GetParticipantsCompleted;
    
    /// <remarks/>
    public event GetParticipantTypesCompletedEventHandler GetParticipantTypesCompleted;
    
    /// <remarks/>
    public event LoginByAdministratorCompletedEventHandler LoginByAdministratorCompleted;
    
    /// <remarks/>
    public event LoginCompletedEventHandler LoginCompleted;
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateParticipantByDataSet", RequestElementName="UpdateParticipantByDataSet", RequestNamespace="http://tempuri.org/", ResponseElementName="UpdateParticipantByDataSetResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("UpdateParticipantByDataSetResult")]
    public bool UpdateParticipant(System.Data.DataSet participants, System.Guid loginUserID, out string message) {
        object[] results = this.Invoke("UpdateParticipant", new object[] {
                    participants,
                    loginUserID});
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateParticipant(System.Data.DataSet participants, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateParticipant", new object[] {
                    participants,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndUpdateParticipant(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateParticipantAsync(System.Data.DataSet participants, System.Guid loginUserID) {
        this.UpdateParticipantAsync(participants, loginUserID, null);
    }
    
    /// <remarks/>
    public void UpdateParticipantAsync(System.Data.DataSet participants, System.Guid loginUserID, object userState) {
        if ((this.UpdateParticipantOperationCompleted == null)) {
            this.UpdateParticipantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateParticipantOperationCompleted);
        }
        this.InvokeAsync("UpdateParticipant", new object[] {
                    participants,
                    loginUserID}, this.UpdateParticipantOperationCompleted, userState);
    }
    
    private void OnUpdateParticipantOperationCompleted(object arg) {
        if ((this.UpdateParticipantCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateParticipantCompleted(this, new UpdateParticipantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdatePassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool UpdatePassword(System.Guid participantID, string password, System.Guid loginUserID, out string message) {
        object[] results = this.Invoke("UpdatePassword", new object[] {
                    participantID,
                    password,
                    loginUserID});
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdatePassword(System.Guid participantID, string password, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdatePassword", new object[] {
                    participantID,
                    password,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndUpdatePassword(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void UpdatePasswordAsync(System.Guid participantID, string password, System.Guid loginUserID) {
        this.UpdatePasswordAsync(participantID, password, loginUserID, null);
    }
    
    /// <remarks/>
    public void UpdatePasswordAsync(System.Guid participantID, string password, System.Guid loginUserID, object userState) {
        if ((this.UpdatePasswordOperationCompleted == null)) {
            this.UpdatePasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdatePasswordOperationCompleted);
        }
        this.InvokeAsync("UpdatePassword", new object[] {
                    participantID,
                    password,
                    loginUserID}, this.UpdatePasswordOperationCompleted, userState);
    }
    
    private void OnUpdatePasswordOperationCompleted(object arg) {
        if ((this.UpdatePasswordCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdatePasswordCompleted(this, new UpdatePasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.WebMethodAttribute(MessageName="UpdateParticipant1")]
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateParticipant", RequestElementName="UpdateParticipant", RequestNamespace="http://tempuri.org/", ResponseElementName="UpdateParticipantResponse", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    [return: System.Xml.Serialization.XmlElementAttribute("UpdateParticipantResult")]
    public bool UpdateParticipant(System.Guid participantID, string participantName, string participantLoginName, string password, System.Guid loginUserID, out string message) {
        object[] results = this.Invoke("UpdateParticipant1", new object[] {
                    participantID,
                    participantName,
                    participantLoginName,
                    password,
                    loginUserID});
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginUpdateParticipant1(System.Guid participantID, string participantName, string participantLoginName, string password, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("UpdateParticipant1", new object[] {
                    participantID,
                    participantName,
                    participantLoginName,
                    password,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndUpdateParticipant1(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void UpdateParticipant1Async(System.Guid participantID, string participantName, string participantLoginName, string password, System.Guid loginUserID) {
        this.UpdateParticipant1Async(participantID, participantName, participantLoginName, password, loginUserID, null);
    }
    
    /// <remarks/>
    public void UpdateParticipant1Async(System.Guid participantID, string participantName, string participantLoginName, string password, System.Guid loginUserID, object userState) {
        if ((this.UpdateParticipant1OperationCompleted == null)) {
            this.UpdateParticipant1OperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateParticipant1OperationCompleted);
        }
        this.InvokeAsync("UpdateParticipant1", new object[] {
                    participantID,
                    participantName,
                    participantLoginName,
                    password,
                    loginUserID}, this.UpdateParticipant1OperationCompleted, userState);
    }
    
    private void OnUpdateParticipant1OperationCompleted(object arg) {
        if ((this.UpdateParticipant1Completed != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.UpdateParticipant1Completed(this, new UpdateParticipant1CompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateParticipant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool CreateParticipant(System.Guid participantID, string participantName, string participantLoginName, string participantPassword, System.Guid participantTypeID, System.Guid parentParticipantID, System.Guid loginUserID, out string message) {
        object[] results = this.Invoke("CreateParticipant", new object[] {
                    participantID,
                    participantName,
                    participantLoginName,
                    participantPassword,
                    participantTypeID,
                    parentParticipantID,
                    loginUserID});
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateParticipant(System.Guid participantID, string participantName, string participantLoginName, string participantPassword, System.Guid participantTypeID, System.Guid parentParticipantID, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateParticipant", new object[] {
                    participantID,
                    participantName,
                    participantLoginName,
                    participantPassword,
                    participantTypeID,
                    parentParticipantID,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndCreateParticipant(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void CreateParticipantAsync(System.Guid participantID, string participantName, string participantLoginName, string participantPassword, System.Guid participantTypeID, System.Guid parentParticipantID, System.Guid loginUserID) {
        this.CreateParticipantAsync(participantID, participantName, participantLoginName, participantPassword, participantTypeID, parentParticipantID, loginUserID, null);
    }
    
    /// <remarks/>
    public void CreateParticipantAsync(System.Guid participantID, string participantName, string participantLoginName, string participantPassword, System.Guid participantTypeID, System.Guid parentParticipantID, System.Guid loginUserID, object userState) {
        if ((this.CreateParticipantOperationCompleted == null)) {
            this.CreateParticipantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateParticipantOperationCompleted);
        }
        this.InvokeAsync("CreateParticipant", new object[] {
                    participantID,
                    participantName,
                    participantLoginName,
                    participantPassword,
                    participantTypeID,
                    parentParticipantID,
                    loginUserID}, this.CreateParticipantOperationCompleted, userState);
    }
    
    private void OnCreateParticipantOperationCompleted(object arg) {
        if ((this.CreateParticipantCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateParticipantCompleted(this, new CreateParticipantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteParticipant", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool DeleteParticipant(System.Guid participantID, System.Guid loginUserID, out string message) {
        object[] results = this.Invoke("DeleteParticipant", new object[] {
                    participantID,
                    loginUserID});
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteParticipant(System.Guid participantID, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteParticipant", new object[] {
                    participantID,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndDeleteParticipant(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteParticipantAsync(System.Guid participantID, System.Guid loginUserID) {
        this.DeleteParticipantAsync(participantID, loginUserID, null);
    }
    
    /// <remarks/>
    public void DeleteParticipantAsync(System.Guid participantID, System.Guid loginUserID, object userState) {
        if ((this.DeleteParticipantOperationCompleted == null)) {
            this.DeleteParticipantOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteParticipantOperationCompleted);
        }
        this.InvokeAsync("DeleteParticipant", new object[] {
                    participantID,
                    loginUserID}, this.DeleteParticipantOperationCompleted, userState);
    }
    
    private void OnDeleteParticipantOperationCompleted(object arg) {
        if ((this.DeleteParticipantCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteParticipantCompleted(this, new DeleteParticipantCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateParticipantRelation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool CreateParticipantRelation(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, out string message) {
        object[] results = this.Invoke("CreateParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID});
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCreateParticipantRelation(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CreateParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndCreateParticipantRelation(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void CreateParticipantRelationAsync(System.Guid participantID, System.Guid parentID, System.Guid loginUserID) {
        this.CreateParticipantRelationAsync(participantID, parentID, loginUserID, null);
    }
    
    /// <remarks/>
    public void CreateParticipantRelationAsync(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, object userState) {
        if ((this.CreateParticipantRelationOperationCompleted == null)) {
            this.CreateParticipantRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateParticipantRelationOperationCompleted);
        }
        this.InvokeAsync("CreateParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID}, this.CreateParticipantRelationOperationCompleted, userState);
    }
    
    private void OnCreateParticipantRelationOperationCompleted(object arg) {
        if ((this.CreateParticipantRelationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CreateParticipantRelationCompleted(this, new CreateParticipantRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteParticipantRelation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool DeleteParticipantRelation(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, out string message) {
        object[] results = this.Invoke("DeleteParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID});
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginDeleteParticipantRelation(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("DeleteParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndDeleteParticipantRelation(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void DeleteParticipantRelationAsync(System.Guid participantID, System.Guid parentID, System.Guid loginUserID) {
        this.DeleteParticipantRelationAsync(participantID, parentID, loginUserID, null);
    }
    
    /// <remarks/>
    public void DeleteParticipantRelationAsync(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, object userState) {
        if ((this.DeleteParticipantRelationOperationCompleted == null)) {
            this.DeleteParticipantRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteParticipantRelationOperationCompleted);
        }
        this.InvokeAsync("DeleteParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID}, this.DeleteParticipantRelationOperationCompleted, userState);
    }
    
    private void OnDeleteParticipantRelationOperationCompleted(object arg) {
        if ((this.DeleteParticipantRelationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.DeleteParticipantRelationCompleted(this, new DeleteParticipantRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckParticipantRelation", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public bool CheckParticipantRelation(System.Guid participantID, System.Guid parentID, System.Guid loginUserID) {
        object[] results = this.Invoke("CheckParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID});
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginCheckParticipantRelation(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("CheckParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public bool EndCheckParticipantRelation(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((bool)(results[0]));
    }
    
    /// <remarks/>
    public void CheckParticipantRelationAsync(System.Guid participantID, System.Guid parentID, System.Guid loginUserID) {
        this.CheckParticipantRelationAsync(participantID, parentID, loginUserID, null);
    }
    
    /// <remarks/>
    public void CheckParticipantRelationAsync(System.Guid participantID, System.Guid parentID, System.Guid loginUserID, object userState) {
        if ((this.CheckParticipantRelationOperationCompleted == null)) {
            this.CheckParticipantRelationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckParticipantRelationOperationCompleted);
        }
        this.InvokeAsync("CheckParticipantRelation", new object[] {
                    participantID,
                    parentID,
                    loginUserID}, this.CheckParticipantRelationOperationCompleted, userState);
    }
    
    private void OnCheckParticipantRelationOperationCompleted(object arg) {
        if ((this.CheckParticipantRelationCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.CheckParticipantRelationCompleted(this, new CheckParticipantRelationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParticipants", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetParticipants(System.Guid loginUserID) {
        object[] results = this.Invoke("GetParticipants", new object[] {
                    loginUserID});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetParticipants(System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetParticipants", new object[] {
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetParticipants(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetParticipantsAsync(System.Guid loginUserID) {
        this.GetParticipantsAsync(loginUserID, null);
    }
    
    /// <remarks/>
    public void GetParticipantsAsync(System.Guid loginUserID, object userState) {
        if ((this.GetParticipantsOperationCompleted == null)) {
            this.GetParticipantsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParticipantsOperationCompleted);
        }
        this.InvokeAsync("GetParticipants", new object[] {
                    loginUserID}, this.GetParticipantsOperationCompleted, userState);
    }
    
    private void OnGetParticipantsOperationCompleted(object arg) {
        if ((this.GetParticipantsCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetParticipantsCompleted(this, new GetParticipantsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetParticipantTypes", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Data.DataSet GetParticipantTypes(System.Guid loginUserID) {
        object[] results = this.Invoke("GetParticipantTypes", new object[] {
                    loginUserID});
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginGetParticipantTypes(System.Guid loginUserID, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("GetParticipantTypes", new object[] {
                    loginUserID}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Data.DataSet EndGetParticipantTypes(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Data.DataSet)(results[0]));
    }
    
    /// <remarks/>
    public void GetParticipantTypesAsync(System.Guid loginUserID) {
        this.GetParticipantTypesAsync(loginUserID, null);
    }
    
    /// <remarks/>
    public void GetParticipantTypesAsync(System.Guid loginUserID, object userState) {
        if ((this.GetParticipantTypesOperationCompleted == null)) {
            this.GetParticipantTypesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetParticipantTypesOperationCompleted);
        }
        this.InvokeAsync("GetParticipantTypes", new object[] {
                    loginUserID}, this.GetParticipantTypesOperationCompleted, userState);
    }
    
    private void OnGetParticipantTypesOperationCompleted(object arg) {
        if ((this.GetParticipantTypesCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.GetParticipantTypesCompleted(this, new GetParticipantTypesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/LoginByAdministrator", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Guid LoginByAdministrator(string participantLoginName, string participantPassword, out string message) {
        object[] results = this.Invoke("LoginByAdministrator", new object[] {
                    participantLoginName,
                    participantPassword});
        message = ((string)(results[1]));
        return ((System.Guid)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLoginByAdministrator(string participantLoginName, string participantPassword, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("LoginByAdministrator", new object[] {
                    participantLoginName,
                    participantPassword}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Guid EndLoginByAdministrator(System.IAsyncResult asyncResult, out string message) {
        object[] results = this.EndInvoke(asyncResult);
        message = ((string)(results[1]));
        return ((System.Guid)(results[0]));
    }
    
    /// <remarks/>
    public void LoginByAdministratorAsync(string participantLoginName, string participantPassword) {
        this.LoginByAdministratorAsync(participantLoginName, participantPassword, null);
    }
    
    /// <remarks/>
    public void LoginByAdministratorAsync(string participantLoginName, string participantPassword, object userState) {
        if ((this.LoginByAdministratorOperationCompleted == null)) {
            this.LoginByAdministratorOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginByAdministratorOperationCompleted);
        }
        this.InvokeAsync("LoginByAdministrator", new object[] {
                    participantLoginName,
                    participantPassword}, this.LoginByAdministratorOperationCompleted, userState);
    }
    
    private void OnLoginByAdministratorOperationCompleted(object arg) {
        if ((this.LoginByAdministratorCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LoginByAdministratorCompleted(this, new LoginByAdministratorCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/Login", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
    public System.Guid Login(string participantLoginName, string participantPassword) {
        object[] results = this.Invoke("Login", new object[] {
                    participantLoginName,
                    participantPassword});
        return ((System.Guid)(results[0]));
    }
    
    /// <remarks/>
    public System.IAsyncResult BeginLogin(string participantLoginName, string participantPassword, System.AsyncCallback callback, object asyncState) {
        return this.BeginInvoke("Login", new object[] {
                    participantLoginName,
                    participantPassword}, callback, asyncState);
    }
    
    /// <remarks/>
    public System.Guid EndLogin(System.IAsyncResult asyncResult) {
        object[] results = this.EndInvoke(asyncResult);
        return ((System.Guid)(results[0]));
    }
    
    /// <remarks/>
    public void LoginAsync(string participantLoginName, string participantPassword) {
        this.LoginAsync(participantLoginName, participantPassword, null);
    }
    
    /// <remarks/>
    public void LoginAsync(string participantLoginName, string participantPassword, object userState) {
        if ((this.LoginOperationCompleted == null)) {
            this.LoginOperationCompleted = new System.Threading.SendOrPostCallback(this.OnLoginOperationCompleted);
        }
        this.InvokeAsync("Login", new object[] {
                    participantLoginName,
                    participantPassword}, this.LoginOperationCompleted, userState);
    }
    
    private void OnLoginOperationCompleted(object arg) {
        if ((this.LoginCompleted != null)) {
            System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
            this.LoginCompleted(this, new LoginCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
        }
    }
    
    /// <remarks/>
    public new void CancelAsync(object userState) {
        base.CancelAsync(userState);
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void UpdateParticipantCompletedEventHandler(object sender, UpdateParticipantCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateParticipantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateParticipantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void UpdatePasswordCompletedEventHandler(object sender, UpdatePasswordCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdatePasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdatePasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void UpdateParticipant1CompletedEventHandler(object sender, UpdateParticipant1CompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class UpdateParticipant1CompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal UpdateParticipant1CompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void CreateParticipantCompletedEventHandler(object sender, CreateParticipantCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateParticipantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateParticipantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void DeleteParticipantCompletedEventHandler(object sender, DeleteParticipantCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteParticipantCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteParticipantCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void CreateParticipantRelationCompletedEventHandler(object sender, CreateParticipantRelationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CreateParticipantRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CreateParticipantRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void DeleteParticipantRelationCompletedEventHandler(object sender, DeleteParticipantRelationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class DeleteParticipantRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal DeleteParticipantRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void CheckParticipantRelationCompletedEventHandler(object sender, CheckParticipantRelationCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class CheckParticipantRelationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal CheckParticipantRelationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public bool Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((bool)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetParticipantsCompletedEventHandler(object sender, GetParticipantsCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetParticipantsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetParticipantsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void GetParticipantTypesCompletedEventHandler(object sender, GetParticipantTypesCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class GetParticipantTypesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal GetParticipantTypesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Data.DataSet Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Data.DataSet)(this.results[0]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void LoginByAdministratorCompletedEventHandler(object sender, LoginByAdministratorCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginByAdministratorCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LoginByAdministratorCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Guid Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Guid)(this.results[0]));
        }
    }
    
    /// <remarks/>
    public string message {
        get {
            this.RaiseExceptionIfNecessary();
            return ((string)(this.results[1]));
        }
    }
}

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
public delegate void LoginCompletedEventHandler(object sender, LoginCompletedEventArgs e);

/// <remarks/>
[System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "4.0.30319.1")]
[System.Diagnostics.DebuggerStepThroughAttribute()]
[System.ComponentModel.DesignerCategoryAttribute("code")]
public partial class LoginCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
    
    private object[] results;
    
    internal LoginCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
            base(exception, cancelled, userState) {
        this.results = results;
    }
    
    /// <remarks/>
    public System.Guid Result {
        get {
            this.RaiseExceptionIfNecessary();
            return ((System.Guid)(this.results[0]));
        }
    }
}
